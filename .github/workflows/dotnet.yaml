# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'zulu' # Alternative distribution options are available.
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore WebApplication1/WebApplication1.sln
    - name: Setup Code Coverage
      run: |
        sudo apt-get update && sudo apt-get install glibc-source libxml2 -y
        dotnet tool install --global dotnet-coverage
    - name: Sonarqube Begin
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: | 
        dotnet tool install --global dotnet-sonarscanner
        dotnet sonarscanner begin /k:"laternenpolster_sqs-vorlesung" /o:"laternenpolster" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
    - name: Build
      run: dotnet build --no-restore --no-incremental WebApplication1/WebApplication1.sln
    - name: Ensure browsers are installed
      run: pwsh WebApplication1/TestProject1/bin/Debug/net8.0/playwright.ps1 install --with-deps
    - name: Test
      run: dotnet test --no-build --verbosity normal WebApplication1/WebApplication1.sln
    - name: Coverage
      run: dotnet-coverage collect "dotnet test PokemonLookup/PokemonLookup.sln" -f xml -o "coverage.xml"
    - name: Sonarqube end
      run: dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
